akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "WARNING"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  quartz {
    defaultTimezone = "Europe/Riga"
    schedules {
      # Seconds(0-59,-*/)   Minutes(0-59,-*/)   Hours(0-23,-*/)
      #     Day_of_month(1-31,-*?/LW)   Month(1-12/jan-dec,-*/)   Day_of_week(1-7/sun-sat,-*?/L#)
      # '*' - all, '?' - any, '-' - interval, ',' - extra values separator, '/' - increment, i.e. 5/15 is 5,20,35,50
      # 'L' - last, 'W' - weekday, '#' - nth of month, i.e. 6#3 is third friday

    }
  }
}

akka.http{
  server {
    remote-address-header = on
    parsing.max-content-length=128m
    max-chunk-size=16m
  }
}

mail {
  enabled = false
  from = "foo@bar.com"
  smtp {
    host = "smtp.bar.com"
    port = 25
    transport = "SMTP_TLS"
    user = <user_email>
    password = <user_pwd>
  }
}


app {
  host = "http://localhost:8090/"
  deferred-requests {
    worker-count = 20
    default-timeout = 180s
    cleanup-job-interval = 1800s
    requests="long-req1, long-req2"
    timeouts {
      long-req3 = 60s
    }
    files.path = "/tmp/bank"
  }
  files.path = "/tmp/bank"
  log.path = "/tmp/bank"
}

jdbc {
  query-timeout = 5s
}

jdbc.cp {
  main {
    jdbcUrl = "jdbc:postgresql://psql:5432/bank"
    username = "bank"
    password = "bank"
    autoCommit = false
  }
  audit {
      jdbcUrl = "jdbc:postgresql://psql:5432/bank"
      username = "bank"
      password = "bank"
      autoCommit = false
  }
}

audit {
  enabled = true
  pool = "audit"
}

testEnv = true

tresql {
  debug = false
  max-result-size = 10000
}

#generate with `openssl enc -aes-256-cbc -k secret -P -md sha256`
auth.crypto.key = "this is enough long crypto secret key."
#generate with `openssl enc -aes-256-cbc -k secret -P -md sha256`
auth.mac.key = "this is enough long crypto secret key."

session.timeout = 15m
