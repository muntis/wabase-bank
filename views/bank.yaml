name: bank_client_list
table: client c
api: manage_bank_clients list, manage_bank_clients count
comments:
  - List of bank clients with their details
  - Must be accessible only to users with role `manage_bank_clients`
fields:
  - id
  - name:
    - sortable: true
  - address
  - phone
  - email:
    - sortable: true
  - last_activity = greatest(date_created, date_updated, last_login) :
    - Last activity
    - sortable: true
  - initials = substring(name, 1, 1) || substring(surname, 1, 1) :
    - Initials
    - sortable: true
order:
  - last_activity
  - id

name: bank_client
table: client c
api: manage_bank_clients get, manage_bank_clients save, manage_bank_clients delete
auth update delete: exists(client_manager cm[cm.client_id = c.id & cm.user_id = :current_user_id]{1})
comments:
  - Bank client details
  - Must be accessible only to users with role `manage_bank_clients`
fields:
  - id
  - name
  - surname
  - address
  - phone
  - email
  - balance balance = (account a[a.client_id = c.id]{sum(a.balance)}) : Total balance
  - date_created [+]:
      - field api: readonly
  - date_updated:
      - field api: readonly
  - last_login [+]:
      - field api: readonly
  - accounts [+-=]* client_account:
insert:
  - date_created = now()
  - date_updated = now()
  - accounts = foreach :accounts :
      - date_created = now()
      - balance = 0.0
  - id = insert this
  - +client_manager{id = nextval('seq'), client_id = :id, user_id = :current_user_id, date_assigned = now()}
  - redirect this
update:
  - date_updated = now()
  - save this


name: client_account
table: account a
api:
comments:
  - List of bank accounts with their details
  - Must be accessible only to users with role `manage_bank_accounts`
fields:
  - id
  - number
  - balance       [+]:
  - currency
  - type
  - date_created  [+]:
  - date_closed


name: bank_account
table: account a
api: manage_bank_clients list, manage_bank_clients count, manage_bank_clients get, manage_bank_clients save, manage_bank_clients delete
auth save delete: exists(client_manager cm[cm.client_id = a.client_id & cm.user_id = :current_user_id]{1})
comments:
  - List of bank accounts with their details
  - Must be accessible only to users with role `manage_bank_clients`
fields:
  - id
  - client_id
  - number  [+]:
  - balance [+]:
      - field api: readonly
  - currency
  - type
  - date_created [+]:
      - field api: readonly
  - date_closed
insert:
  - date_created = now()
  - balance = 0.0
  - insert this

name: bank_account_list
table: account a
api: manage_bank_clients list, manage_bank_clients count
comments:
  - List of bank accounts with their details
  - Must be accessible only to users with role `manage_bank_clients`
joins:
  - a [a.client_id = c.id] client c
fields:
  - id
  - number
  - balance
  - currency
  - type
  - client_name = c.name || ' ' || c.surname
filter:
  - client_id
  - ^client_name %~~~% :client_name?
order:
  - client_name
  - id

name: bank_account_list_with_count
table:
api: manage_bank_clients list
comments: Returns list of page of bank accounts with total count
fields:
  - count: int
  - data *:
    table: account a
    fields:
      - id
      - number
      - balance
      - currency
      - type
      - client_id
      - date_created
      - date_closed
    order:
      - id
    filter:
      - client_id
list:
  - c: count bank_account_list_with_count_data
  - d:   list bank_account_list_with_count_data
  - return (count = :c) + (data = :d)


name: bank_account_get_with_custom_select
table: account a
api: manage_bank_clients get
comments: Bank account details with custom select
fields:
  - id
  - number
  - balance
  - custom_field string =
get:
  - unique_opt account[id = :id] {id, number, balance, 'custom_value' custom_field}

name: bank_account_by_client
table: account a
api: manage_bank_clients get
comments: Bank account details with unique option
fields:
  - id
  - number
  - balance
get:
  - client_id = :id
  - unique_opt list bank_account_list

name: request_account_closure
table: account a
api: manage_bank_clients update
fields:
  - id
update:
  - message = 'Account closure request received'
  - status ok { :message }

name: request_account_closure_internal
table: account a
api: manage_bank_clients update
fields:
  - id
  - message =
update:
  - message = 'Account closure request received'
  - return (message = :message)

name: request_main_account_closure
table: account a
api: manage_bank_clients update
fields:
  - id
update:
  - res = http put {'/data/request_account_closure_internal', :id} unique {:id id}
  - status ok :res

